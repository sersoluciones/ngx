import { __decorate, __read, __spread } from "tslib";
import { ReactiveFormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { SerFormElementComponent } from './ser-form-element/ser-form-element.component';
import { SerControlDirective } from './ser-form-element/ser-control.directive';
import { SerErrorDirective } from './ser-errors/ser-error.directive';
import { SerErrorsDirective } from './ser-errors/ser-errors.directive';
import { PinInputComponent } from './pin/pin-input.component';
import { SerSelectModule } from './select/ser-select.module';
import { AddressColComponent } from './address/address-col/address-col.component';
import { BrowserModule } from '@angular/platform-browser';
import { SerFilterModule } from './filter/ser-filter.module';
var dependencies = [
    SerFormElementComponent,
    SerControlDirective,
    SerErrorsDirective,
    SerErrorDirective,
    PinInputComponent,
    AddressColComponent
];
var SerFormModule = /** @class */ (function () {
    function SerFormModule() {
    }
    SerFormModule = __decorate([
        NgModule({
            imports: [CommonModule, BrowserModule, ReactiveFormsModule],
            declarations: __spread(dependencies),
            exports: __spread(dependencies, [SerSelectModule, SerFilterModule])
        })
    ], SerFormModule);
    return SerFormModule;
}());
export { SerFormModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyLWZvcm0ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHNlcnNvbC9uZ3gvIiwic291cmNlcyI6WyJmb3JtL3Nlci1mb3JtLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDeEYsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDckUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDdkUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFN0QsSUFBTSxZQUFZLEdBQUc7SUFDakIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixtQkFBbUI7Q0FDdEIsQ0FBQztBQU9GO0lBQUE7SUFBNkIsQ0FBQztJQUFqQixhQUFhO1FBTHpCLFFBQVEsQ0FBQztZQUNOLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxhQUFhLEVBQUUsbUJBQW1CLENBQUM7WUFDM0QsWUFBWSxXQUFNLFlBQVksQ0FBQztZQUMvQixPQUFPLFdBQU0sWUFBWSxHQUFFLGVBQWUsRUFBRSxlQUFlLEVBQUM7U0FDL0QsQ0FBQztPQUNXLGFBQWEsQ0FBSTtJQUFELG9CQUFDO0NBQUEsQUFBOUIsSUFBOEI7U0FBakIsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNlckZvcm1FbGVtZW50Q29tcG9uZW50IH0gZnJvbSAnLi9zZXItZm9ybS1lbGVtZW50L3Nlci1mb3JtLWVsZW1lbnQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU2VyQ29udHJvbERpcmVjdGl2ZSB9IGZyb20gJy4vc2VyLWZvcm0tZWxlbWVudC9zZXItY29udHJvbC5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBTZXJFcnJvckRpcmVjdGl2ZSB9IGZyb20gJy4vc2VyLWVycm9ycy9zZXItZXJyb3IuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgU2VyRXJyb3JzRGlyZWN0aXZlIH0gZnJvbSAnLi9zZXItZXJyb3JzL3Nlci1lcnJvcnMuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgUGluSW5wdXRDb21wb25lbnQgfSBmcm9tICcuL3Bpbi9waW4taW5wdXQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgU2VyU2VsZWN0TW9kdWxlIH0gZnJvbSAnLi9zZWxlY3Qvc2VyLXNlbGVjdC5tb2R1bGUnO1xyXG5pbXBvcnQgeyBBZGRyZXNzQ29sQ29tcG9uZW50IH0gZnJvbSAnLi9hZGRyZXNzL2FkZHJlc3MtY29sL2FkZHJlc3MtY29sLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEJyb3dzZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcclxuaW1wb3J0IHsgU2VyRmlsdGVyTW9kdWxlIH0gZnJvbSAnLi9maWx0ZXIvc2VyLWZpbHRlci5tb2R1bGUnO1xyXG5cclxuY29uc3QgZGVwZW5kZW5jaWVzID0gW1xyXG4gICAgU2VyRm9ybUVsZW1lbnRDb21wb25lbnQsXHJcbiAgICBTZXJDb250cm9sRGlyZWN0aXZlLFxyXG4gICAgU2VyRXJyb3JzRGlyZWN0aXZlLFxyXG4gICAgU2VyRXJyb3JEaXJlY3RpdmUsXHJcbiAgICBQaW5JbnB1dENvbXBvbmVudCxcclxuICAgIEFkZHJlc3NDb2xDb21wb25lbnRcclxuXTtcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBCcm93c2VyTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlXSxcclxuICAgIGRlY2xhcmF0aW9uczogWy4uLmRlcGVuZGVuY2llc10sXHJcbiAgICBleHBvcnRzOiBbLi4uZGVwZW5kZW5jaWVzLCBTZXJTZWxlY3RNb2R1bGUsIFNlckZpbHRlck1vZHVsZV1cclxufSlcclxuZXhwb3J0IGNsYXNzIFNlckZvcm1Nb2R1bGUgeyB9XHJcbiJdfQ==